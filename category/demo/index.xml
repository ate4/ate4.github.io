<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Demo | Academic</title>
    <link>https://example.com/category/demo/</link>
      <atom:link href="https://example.com/category/demo/index.xml" rel="self" type="application/rss+xml" />
    <description>Demo</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 13 Dec 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Demo</title>
      <link>https://example.com/category/demo/</link>
    </image>
    
    <item>
      <title>it version control</title>
      <link>https://example.com/post/relatedpost/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/relatedpost/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Version Control Systems (VCS) are used when several people work on one project.Usually, the main project tree is stored in a local
or remote repository, to which access is configured for project participants.When
making changes to the content of the project, the version control system allows
you to fix them, combine changes made by different project participants,
roll back to any earlier version of the project, if required.
In classical version control systems, a centralized model is used,
assuming a single repository for storing files.Most version control functions are performed by a special server.
The project participant (user)
receives the version of files he needs before starting work through certain commands.After making changes, the user
places the new version in the repository. At the same time, previous versions are not deleted
from the central repository and you can return to them at any time.The server may
not save the full version of the modified files, but produce a so-called
delta compression—save only changes between successive versions, which
reduces the amount of stored data Version control systems support the ability to track and resolve
conflicts that may arise when several people work on a single
file.You can merge (merge) the changes made by different participants (
automatically or manually), manually select the desired version, cancel the changes altogether
or lock the files for modification. Depending on the settings, the lock does not
allow other users to get a working copy or prevents the change
a working copy of the file by means of the OS file system, thus
providing privileged access to only one user working with the file.
Version control systems can also provide additional, more flexible
functionality.For example, they can support working with multiple versions of a single file, keeping a common history of changes up to the point of branching
versions and their own change histories of each branch.Moreover,
information is usually available about which of the participants, when and what changes were made.The usual
this kind of information is stored in the change log, access to which can be restricted.
Unlike the classical ones, in distributed version control systems, a central
repository is not mandatory.
Among the classic VCS, the most famous are CVS, Subversion, and among the distributed ones — Git, Bazaar, Mercurial. The principles of their work are similar, they differ mainly in the syntax of the commands used in the work&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Last week</title>
      <link>https://example.com/post/lastweek/</link>
      <pubDate>Sun, 13 Dec 2020 00:00:00 +0000</pubDate>
      <guid>https://example.com/post/lastweek/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;All week I did laboratory work on operating systems programming and arduino, and I also worked on weekends at work In general, all my weeks are the same&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
  </channel>
</rss>
