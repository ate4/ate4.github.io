<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Митичкина Е. П.</title>
    <link>https://ate4.github.io/ru/post/</link>
      <atom:link href="https://ate4.github.io/ru/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>ru-ru</language><lastBuildDate>Wed, 25 May 2022 00:00:01 +0000</lastBuildDate>
    <image>
      <url>https://ate4.github.io/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>https://ate4.github.io/ru/post/</link>
    </image>
    
    <item>
      <title>Прошлая неделя</title>
      <link>https://ate4.github.io/ru/post/lastweek-4/</link>
      <pubDate>Wed, 25 May 2022 00:00:01 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/lastweek-4/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Я решил что-то изменить и начал заниматься индивидуальным проектом раньше, и я надеюсь скоротать это время&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Научный язык программирования</title>
      <link>https://ate4.github.io/ru/post/scientific-programming-language/</link>
      <pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/scientific-programming-language/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;По мере того как компьютеры становятся все более распространенными в физических исследованиях (и научных исследованиях в целом), вопрос о том, какие языки программирования использовать, становится все более важным. Факторами, которые особенно влияют на важность этого вопроса, являются&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;возрастающая сложность программируемых задач;
растущая сложность и разнообразие программируемых машин;
растущее использование графической визуализации и взаимодействия с научными программами; и
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;растущее число языков программирования, доступных для программирования.&lt;/p&gt;
&lt;p&gt;На этой странице предпринята попытка дать некоторые указания на хорошие языки программирования и среды для научного использования, основанные на моем собственном опыте работы с ними и комментариях других людей.
Фортран
Фортран - это язык прошлого в научных вычислениях и один из основных языков настоящего, когда речь идет о физике. Его основными сильными сторонами на данный момент являются&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;доступно огромное количество хорошо отлаженного и работающего кода;
большая база опыта, накопленного &amp;quot;старшими&amp;quot; физиками (почти все мы старше тридцати лет?);
простота использования. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Последний пункт, пожалуй, самый важный, поскольку у Fortran есть &amp;ldquo;модель&amp;rdquo; компьютера, которая достаточно проста, чтобы не нужно было быть профессионалом (т.Е. Обширное обучение или самообразование в области информатики или программирования), чтобы создать разумную программу Fortran.&lt;/p&gt;
&lt;p&gt;Это не означает, что невозможно создать плохую программу на фортране. Это довольно просто, но в той или иной степени это относится практически ко всем компьютерным языкам.&lt;/p&gt;
&lt;p&gt;Fortran 90 расширяет fortran несколькими полезными способами и делает его более современным языком программирования, сохраняя при этом полную совместимость с кодом Fortran-77. Две из наиболее интересных функций - это агрегированные типы данных (&amp;ldquo;структуры&amp;rdquo;) и встроенные операции с массивами и матрицами. На мой взгляд, Fortran имеет тенденцию к большим потерям по мере усложнения проектов. Поддержка повторного использования и инкапсуляции кода довольно слаба в Fortran, по крайней мере, в Fortran-77. Fortran 90 имеет больше поддержки для этого, но у меня мало опыта работы с ним. Кроме того, большинство пакетов графического интерфейса и визуализации не имеют встроенной поддержки Fortran.&lt;/p&gt;
&lt;p&gt;Некоторые сторонники Fortran 90 хотели бы, чтобы некоторые из &amp;ldquo;опасных&amp;rdquo; элементов Fortran-77 были удалены из языка. Я думаю, что это плохая идея. Перейдите сюда, чтобы прочитать, почему я так думаю.&lt;/p&gt;
&lt;p&gt;C и C++
C - интересный выбор в качестве научного языка. Он чрезвычайно гибок и доступен практически на всех известных человеку машинах. Кроме того, один из лучших компиляторов C (gcc) доступен бесплатно. Почти все пакеты визуализации и пользовательского интерфейса поддерживают язык C. Си часто преподается в качестве первого или второго языка на факультетах компьютерных наук университетов.
Давняя проблема C заключается в том, что он создает более медленный код, чем эквивалентный Fortran. В настоящее время скорость работы компьютеров удваивается каждый год или около того, и компиляторы C, похоже, уже не так плохо работают по сравнению с Fortran (типичный код C выполняется на 50-100% быстрее, чем эквивалентный Fortran, в зависимости от приложения). В свете этого, я думаю, что трудно отказаться от C на основе скорости кода, который он создает.&lt;/p&gt;
&lt;p&gt;Тем не менее, я не думаю, что это хороший научный язык программирования. Язык C довольно близок к аппаратному обеспечению, и довольно легко допустить большие ошибки при написании приложения. Эти ошибки часто не проявляются в небольших тестовых примерах, поскольку они связаны с проблемами управления памятью и тому подобным. Кроме того, программирование больших приложений на C требует определенной степени профессионализма, что означает довольно глубокое понимание языка. Как таковой, это плохой язык для основного научного программирования; обычно только создатель программы или люди с реальным опытом в компьютерном программировании смогут понять большое приложение на языке Си, если оно не написано очень тщательно.&lt;/p&gt;
&lt;p&gt;Я полагаю, что эти комментарии также применимы к кодированию на C++. Опасения по поводу удобочитаемости и профессионализма здесь, возможно, даже сильнее, чем в случае &amp;ldquo;просто C&amp;rdquo;. C++ имеет то преимущество, что является самым популярным объектно-ориентированным языком, но он также признан довольно загадочным. Опять же, для программирования приложения на C++, понятного другим, необходима определенная степень профессионализма. Пакеты, которые автоматически генерируют код C++ из указанного пользователем псевдокода, помогают решить проблему, но тогда мы сталкиваемся с просьбой ко всем пользователям использовать один и тот же генератор C++, что является еще одной проблемой того же масштаба.&lt;/p&gt;
&lt;p&gt;Два вышеперечисленных варианта являются &amp;ldquo;традиционными&amp;rdquo;. Теперь я перехожу к новым языкам, которые менее известны в научном сообществе.
Питон
Python - это объектно-ориентированный, расширяемый, интерпретируемый язык. Он работает практически на всех системах Unix, а также на платформах DOS / Windows и на Mac. Это бесплатно и поставляется с полным исходным кодом. Начать использовать Python очень легко - на простом уровне он напоминает Basic и может использоваться в интерактивном режиме так же, как и Basic. Тем не менее, он поддерживает объектные методы и хорошо &amp;ldquo;масштабируется&amp;rdquo;. Масштабирование указывает на относительную сложность написания небольших и больших приложений. Объектные средства помогают и поощряют писать приложение небольшими частями. Эти маленькие фрагменты можно собрать вместе, чтобы создать большую программу, а маленькие фрагменты также можно использовать в других приложениях.&lt;/p&gt;
&lt;p&gt;Еще одним преимуществом Python является его расширяемость. Можно написать объектную библиотеку на C, C++ или родном Python, которая затем может быть динамически или статически связана с основной системой Python и использоваться в программах на Python. Это можно использовать для создания программируемого приложения, такого как пакет для построения графиков данных. Можно было бы добавить пакет к интерпретатору, который содержал бы команды для настройки ваших графиков и фактического отображения данных. Этому графическому интерпретатору Python+ можно присвоить другое имя, например &amp;ldquo;pygraph&amp;rdquo;, и вызвать его как команду. Интерпретатор обработает графические команды и выполнит их. Однако в то же время вы можете использовать любую другую допустимую команду Python в качестве команды для этой графической программы! Таким образом, один графический входной файл для этой программы может сначала вычислить результат, а затем обработать и отобразить его.&lt;/p&gt;
&lt;p&gt;Переход от этого к использованию систем пакетов Python +, таких как программы анализа данных или программы управления экспериментами, довольно очевиден. Это также может в некоторой степени решить вышеупомянутую дилемму, связанную с использованием C++. Профессиональный программист может создать четко определенный пакет библиотек с четко определенным интерфейсом на C++, и это может быть включено в программы Python для использования. Поскольку Python вполне читаем во многом так же, как и Fortran, &amp;ldquo;обычный человек&amp;rdquo; (т.Е. тот, кто не является профессиональным программистом) может использовать эту библиотеку в своих программах. Как профессионалы, которым нужна мощь и эффективность C или C++, так и группа, которая должна использовать результат и уметь читать и понимать программу, могут быть счастливы.&lt;/p&gt;
&lt;p&gt;Мой опыт работы с Python начался, когда я использовал его просто как интерактивное приложение-калькулятор &amp;mdash; Я обнаружил, что стандартный калькулятор Unix &amp;ldquo;bc&amp;rdquo; отсутствует. В какой-то момент я запрограммировал четырехвекторный объектный пакет на Python и использовал его для написания некоторых необходимых мне вычислений кинематики ядерной реакции. Позже я, в свою очередь, использовал как четырехвекторный, так и кинематический модули в большом приложении, используемом для прогнозирования скорости счета для крупного эксперимента по ядерной физике. С тех пор я также написал средство многопараметрического пакетного анализа данных на Python.
Для Python существует несколько инструментов с графическим интерфейсом, а пакет графической визуализации сейчас находится в стадии бета-тестирования. Также существует числовое расширение Python (пакет C, описанный выше в разделе расширений), которое имеет встроенную поддержку операций с целыми массивами и матрицами (которые выполняются со скоростью скомпилированного кода C, а не со скоростью интерпретируемого Python).&lt;/p&gt;
&lt;p&gt;Чтобы узнать, что Python может сделать с этим пакетом числовых вычислений, перейдите по этой ссылке. Это также даст вам представление о том, как выглядит Python, и позволит вам оценить его удобочитаемость. Также ознакомьтесь с руководством по Python по ссылке на веб-страницу Python ниже (подссылка &amp;ldquo;Полная информация о документации Python&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Статья о численном программировании на Python появилась в майском/июньском выпуске журнала Computers in Physics за 1996 год. Более подробную информацию о Python можно найти в группе новостей comp.lang.python или на веб-странице Python. Особый интерес представляет страница о предоставленном программном обеспечении Python, в которой описываются дополнительные пакеты, доступные для Python. Это расширения в духе, упомянутом выше, которые добавляют новые функциональные возможности к основному языку.
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Отчет</title>
      <link>https://ate4.github.io/ru/post/report/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/report/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Содержание основных элементов отчета&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;это титульный лист.Первый
список работ формируется по образцу, который обычно приводится в руководствах по вашему предмету.Не требуется
указывать такие элементы, как название учебного заведения, вид работы
и информацию об исполнителе, но и располагать их в строгом соответствии со стандартами
.&lt;/li&gt;
&lt;li&gt;Абстрактно.Аннотация на самом деле представляет собой краткое изложение всего вашего отчета и содержит ряд статистических данных. В нем должно быть указано количество частей, страниц работы, иллюстраций, приложений, таблиц, а также использованных литературных источников и приложений. Здесь также приведен список ключевых слов работы и текст самого реферата.Последнее подразумевает основные элементы работы от поставленных целей до результатов и рекомендаций по их реализации.В практике университетов реферат обычно не включается в отчеты о лабораторных работах.&lt;/li&gt;
&lt;li&gt;Введение. Во введении к типичной лабораторной работе обычно прописываются цели проводимого исследования и задачи, которые помогут достичь поставленных целей. В то же время есть рабочие места, в которых студенты становятся настоящими первопроходцами.Испытывали ли вы когда-нибудь хотя бы раз чувство крайнего любопытства и нетерпения во время лабораторной работы? Чувствовать, что всего за пару минут ты найдешь ответ на вопрос, на который пока нет ответа?Название для такого расследования будет написано во время возвращения доказательств актуальности и новизны исследования системы.Для того чтобы действительно провести исследования в этой области, в которую, как говорится, еще не ступала нога человека, во введении вам нужно будет дать оценку современного состояния рассматриваемой проблемы и обосновать необходимость ее решения&lt;/li&gt;
&lt;li&gt;Основная часть. Поскольку разные университеты и дисциплины имеют свои тонкости лабораторной работы, содержание основной части подробно описано в соответствующих руководствах.Важно, чтобы этот раздел работы отражал ее суть, описывал методологию и результаты проделанной работы. Основная часть предписывает следующие элементы: цели исследования; задачи, которые помогут вам достичь ваших целей; ход работы, в котором описываются выполненные действия; другие разделы, предусмотренные методическими материалами по изучаемой дисциплине.
– Заключение.Эту часть работы необходимо выполнить, чтобы получить результаты лабораторной работы.Для этого оцените, насколько полно были выполнены задачи.В сложных работах могут присутствовать и другие элементы, например, рекомендации по дальнейшему применению результатов проведенной работы
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Прошлая неделя</title>
      <link>https://ate4.github.io/ru/post/lastweek-3/</link>
      <pubDate>Mon, 16 May 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/lastweek-3/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Я решил что-то изменить и начал заниматься индивидуальным проектом раньше, и я надеюсь скоротать это время&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://ate4.github.io/ru/post/markdowen/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/markdowen/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Markdown - это язык разметки текстов. Такие тексты легко писать и читать. Они могут быть легко преобразованы в HTML. Большинство программистов предпочитают Markdown для написания документации, описания своих проектов, ведения блогов и так далее.
Что это значит?&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Язык разметки&amp;rdquo; - это просто набор соглашений, правил.&lt;/p&gt;
&lt;p&gt;Допустим, вы общаетесь с другом по SMS. Вы не можете сделать текст в них жирным или наклонным. Вы согласны с другом: если я напишу &lt;em&gt;что-то&lt;/em&gt; так между звездочками, то считайте это наклонным текстом. И если я напишу ** что-то ** между двумя звездочками, то считайте это жирным шрифтом. Ты сам придумал правила.&lt;/p&gt;
&lt;p&gt;Markdown - это набор аналогичных правил.
Правила понятны для разных программ и сайтов. Например, раздел &amp;ldquo;Вопросы и ответы&amp;rdquo; в уроках Hexlet поддерживает Markdown. Это означает, что вы можете писать там тексты в соответствии с правилами Markdown, и после нажатия кнопки &amp;ldquo;Отправить&amp;rdquo; разметка станет реальной: текст в одинарных звездочках станет наклонным, текст в двойных звездочках станет жирным и так далее. Это преобразование из Markdown в HTML.
Почему это необходимо?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Чтобы добавить разметку в те места, где реальная разметка невозможна. Например, в простом текстовом файле или в том же SMS, где невозможно выделить жирным шрифтом, создать заголовки, выделить кавычки и т.д.
Для более удобного написания текстов для последующего преобразования в HTML или другие форматы.
&lt;/code&gt;&lt;/pre&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Прошлая неделя</title>
      <link>https://ate4.github.io/ru/post/lastweek-2/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/lastweek-2/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Ничего нового не произошло&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Прошлая неделя</title>
      <link>https://ate4.github.io/ru/post/lastweek/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:01 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/lastweek/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Всю неделю я занимался лабораторными работами по программированию операционных систем и arduino, а также работал по выходным на работе, в общем, все мои недели одинаковы&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
    <item>
      <title>Контроль версий</title>
      <link>https://ate4.github.io/ru/post/relatedpost/</link>
      <pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate>
      <guid>https://ate4.github.io/ru/post/relatedpost/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;
&lt;p&gt;Системы контроля версий (VCS) используются, когда над одним проектом работают несколько человек.Обычно основное дерево проекта хранится в локальном
или удаленном репозитории, доступ к которому настроен для участников проекта.При
внесении изменений в содержимое проекта система контроля версий
позволяет исправлять их, объединять изменения, внесенные разными участниками проекта,
при необходимости выполнять откат к любой более ранней версии проекта.
В классических системах контроля версий используется централизованная модель,
предполагая наличие единого хранилища для хранения файлов.Большинство функций контроля версий выполняются специальным сервером.
Участник проекта (пользователь)
получает нужную ему версию файлов перед началом работы с помощью определенных команд.После внесения изменений пользователь
помещает новую версию в репозиторий. В то же время предыдущие версии не удаляются
из центрального хранилища, и вы можете вернуться к ним в любое время.Сервер может
не сохранять полную версию измененных файлов, но производить так называемое
дельта-сжатие — сохранять только изменения между последовательными версиями, которые
уменьшает объем хранимых данных Системы контроля версий поддерживают возможность отслеживания и разрешения
конфликтов, которые могут возникнуть, когда несколько человек работают над одним
файлом.Вы можете объединить (объединить) изменения, внесенные разными участниками (
автоматически или вручную), вручную выбрать нужную версию, полностью отменить изменения
или заблокировать файлы для изменения. В зависимости от настроек блокировка не
позволяет другим пользователям получить рабочую копию или предотвращает изменение
рабочей копии файла с помощью файловой системы ОС, таким образом
предоставление привилегированного доступа только одному пользователю, работающему с файлом.
Системы контроля версий также могут предоставлять дополнительные, более гибкие
функциональные возможности.Например, они могут поддерживать работу с несколькими версиями одного файла, сохраняя общую историю изменений вплоть до разветвления
версий и свои собственные истории изменений каждой ветви.Кроме того,
обычно доступна информация о том, кто из участников, когда и какие изменения были внесены.Обычно
такого рода информация хранится в журнале изменений, доступ к которому может быть ограничен.
В отличие от классических, в распределенных системах управления версиями центральное
хранилище не является обязательным.
Среди классических венчурных капиталистов наиболее известными являются CVS, Subversion, а среди распределенных — Git, Bazaar, Mercurial. Принципы их работы схожи, отличаются они в основном синтаксисом команд, используемых в работе&lt;/p&gt;
















&lt;figure  id=&#34;figure-the-template-is-mobile-first-with-a-responsive-design-to-ensure-that-your-site-looks-stunning-on-every-device&#34;&gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img src=&#34;https://raw.githubusercontent.com/wowchemy/wowchemy-hugo-modules/master/academic.png&#34; alt=&#34;The template is mobile first with a responsive design to ensure that your site looks stunning on every device.&#34; loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;figcaption&gt;
      The template is mobile first with a responsive design to ensure that your site looks stunning on every device.
    &lt;/figcaption&gt;&lt;/figure&gt;
</description>
    </item>
    
  </channel>
</rss>
